[{"/Users/apple/Documents/lyftron/src/serviceWorker.js":"1","/Users/apple/Documents/lyftron/src/DemoPages/Main/index.js":"2","/Users/apple/Documents/lyftron/src/reducers/index.js":"3","/Users/apple/Documents/lyftron/src/Pages/Logs/index.js":"4","/Users/apple/Documents/lyftron/src/Pages/Integrations/list.js":"5","/Users/apple/Documents/lyftron/src/Pages/Integrations/expanded.js":"6","/Users/apple/Documents/lyftron/src/Pages/Integrations/runbat.js":"7","/Users/apple/Documents/lyftron/src/Pages/Connections/Connection/index.js":"8","/Users/apple/Documents/lyftron/src/Layout/AppHeader/Components/HeaderRightDrawer.js":"9","/Users/apple/Documents/lyftron/src/Layout/AppMain/PageTitle.js":"10","/Users/apple/Documents/lyftron/src/Pages/Wizard/components/step2.js":"11","/Users/apple/Documents/lyftron/src/Layout/AppHeader/Components/TabsContent/TimelineExample.js":"12","/Users/apple/Documents/lyftron/src/Layout/AppMobileMenu/index.js":"13","/Users/apple/Documents/lyftron/src/config/urlconfig.js":"14","/Users/apple/Documents/lyftron/src/Pages/Administration/Apis/index.js":"15","/Users/apple/Documents/lyftron/src/Layout/AppNav/VerticalNavWrapper.js":"16","/Users/apple/Documents/lyftron/src/Pages/Dashboards/Minimal/Examples/Usergraph.jsx":"17","/Users/apple/Documents/lyftron/src/Pages/Connections/AddConnection/index.js":"18","/Users/apple/Documents/lyftron/src/Pages/Wizard/components/step1.js":"19","/Users/apple/Documents/lyftron/src/Layout/AppFooter/Components/TabsContent/SystemExample.js":"20","/Users/apple/Documents/lyftron/src/Layout/AppHeader/Components/TabsContent/DrawerBigExample.js":"21"},{"size":4961,"mtime":1605054142000,"results":"22","hashOfConfig":"23"},{"size":1978,"mtime":1605054142000,"results":"24","hashOfConfig":"23"},{"size":80,"mtime":1605054142000,"results":"25","hashOfConfig":"23"},{"size":715,"mtime":1605054142000,"results":"26","hashOfConfig":"23"},{"size":28037,"mtime":1605054142000,"results":"27","hashOfConfig":"23"},{"size":4111,"mtime":1605054142000,"results":"28","hashOfConfig":"23"},{"size":8352,"mtime":1605054142000,"results":"29","hashOfConfig":"23"},{"size":2005,"mtime":1605054142000,"results":"30","hashOfConfig":"23"},{"size":1803,"mtime":1605054142000,"results":"31","hashOfConfig":"23"},{"size":1657,"mtime":1605054142000,"results":"32","hashOfConfig":"23"},{"size":3338,"mtime":1605054142000,"results":"33","hashOfConfig":"23"},{"size":5441,"mtime":1605054142000,"results":"34","hashOfConfig":"23"},{"size":2652,"mtime":1605054142000,"results":"35","hashOfConfig":"23"},{"size":133,"mtime":1605054142000,"results":"36","hashOfConfig":"23"},{"size":2001,"mtime":1605054142000,"results":"37","hashOfConfig":"23"},{"size":2086,"mtime":1605054142000,"results":"38","hashOfConfig":"23"},{"size":4136,"mtime":1605054142000,"results":"39","hashOfConfig":"23"},{"size":8104,"mtime":1617302150930,"results":"40","hashOfConfig":"23"},{"size":3311,"mtime":1605054142000,"results":"41","hashOfConfig":"23"},{"size":893,"mtime":1605054142000,"results":"42","hashOfConfig":"23"},{"size":22542,"mtime":1605054142000,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e8351j",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/apple/Documents/lyftron/src/serviceWorker.js",[],"/Users/apple/Documents/lyftron/src/DemoPages/Main/index.js",[],"/Users/apple/Documents/lyftron/src/reducers/index.js",["89"],"import ThemeOptions from \"./ThemeOptions\";\n\nexport default {\n  ThemeOptions,\n};\n",["90","91"],"/Users/apple/Documents/lyftron/src/Pages/Logs/index.js",[],"/Users/apple/Documents/lyftron/src/Pages/Integrations/list.js",["92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122"],"import React, { Component,Fragment } from \"react\";\nimport {Link} from 'react-router-dom';\nimport CSSTransitionGroup from \"react-transition-group/CSSTransitionGroup\";\nimport Moment from 'react-moment';\nimport _ from 'underscore';\nimport axios from 'axios';\nimport Loader from \"react-loaders\";\nimport arrowright from './components/image/imageleft.png';\nimport { Form,Button} from 'semantic-ui-react';\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {faSpinner} from '@fortawesome/free-solid-svg-icons';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {Row, Col,Card, CardBody,Modal} from 'reactstrap';\nimport {ResponsiveContainer,Area,AreaChart,Tooltip} from 'recharts';\nimport Timer from 'react-compound-timer';\nimport Switch from \"react-switch\";\nimport avtarimage from './components/image/KoichiTsuji.png';\nimport Configuration from '../../config/urlconfig';\nimport CountUp from \"react-countup\";\nimport \"react-table/react-table.css\";\nimport ReactTable from \"react-table\";\nimport './graph.css';\nimport Addintg from './add.js';\nimport Editschedler from './editscheduler.js';\nimport Runscheduler from './runscheduler.js';\nimport Runbat from './runbat.js';\nimport Deleteandtruncate from './deleteandtruncate';\nlibrary.add(\n  faSpinner);\nconst tableStyle = {\n  border: \"none\",\n  boxShadow: \"none\",\n  textAlign: \"center\"\n};\n  const getColumnWidth = (rows, accessor, headerText) => {\n    const maxWidth = 400\n    const magicSpacing = 10\n    const cellLength = Math.max(\n      ...rows.map(row => (`${row[accessor]}` || '').length),\n      headerText.length,\n    )\n    return Math.min(maxWidth, cellLength * magicSpacing)\n  }\n\n  let totaldata=0;\nexport default class Integrationlist extends Component {\n   constructor() {\n        super();\n        this.config = new Configuration();\n       this.state = {\n           loading:true,pages: 0,\n           dataintglist: [],\n           datagrapharray:[],\n           integid:\"\",\n           runtimeid:\"\",\n           columns:[],\n           modal: false,\n           vessels:[],\n           vesselsdata:[],\n          startDate:'',\n          endDate:'',\n          startDatemodel:'',\n          endDatemodel:'',\n          schedulemodal:false,\n          selectAll: false,\n          checked: [],\n          schedule:'',\n           isactive:true,\n          integrationid:[],\n          deleteintgmodal:false,\n          showprogressdeletemodel:false,\n          modaladd:false\n         };\n     this.toggle = this.toggle.bind(this);\n     this.toggleschedule = this.toggleschedule.bind(this);\n     this.toggletruncate = this.toggletruncate.bind(this);\n     this.handleChange = this.handleChange.bind(this);\n     this.handleSingleCheckboxChange = this.handleSingleCheckboxChange.bind(this);\n      this.handleisactive=this.handleisactive.bind(this);\n     this.deletetintegration=this.deletetintegration.bind(this);\n     this.toggledelete=this.toggledelete.bind(this);\n     this.toggleeditschedule = this.toggleeditschedule.bind(this);\n     this.toggleaddintg=this.toggleaddintg.bind(this);\n    }\n\n\nhandleisactive= async (id,isactive) =>\n     {\n       let status=\"\";\n       if(isactive==true)\n       {\n        status=\"Inactive\";\n       this.setState({\n        isactive:false\n       });\n     }\n     else{\n      status=\"Active\";\n         this.setState({isactive:true});\n     }\n     let params={\n       integration_id:id,\n       status:status\n     }\n      const response = await axios.post(this.config.API_URL+'/api/isactiveintegration',params);\n      debugger;\n      if(response.data.success=true)\n      {\n        this.intg();\n       }\n     }\nhandleChange = () => {\n      var selectAll = !this.state.selectAll;\n      this.setState({ selectAll: selectAll });\n      var checkedCopy = [], intgid= [];\n      this.state.dataintglist.forEach(function(e, index) {\n        checkedCopy.push(selectAll);\n        intgid.push(e.id);\n      });\n      this.setState({\n        checked: checkedCopy\n      });\n      this.setState({integrationid:intgid});\n      if(selectAll == false)\n      {\n        this.setState({\n          checked: [],\n        })\n        this.setState({\n          integrationid: [],\n        })\n      }\n    };\nhandleSingleCheckboxChange (event,index){\n      console.log(index);\n      let orgid= this.state.integrationid;\n      var checkedCopy = this.state.checked;\n      checkedCopy[index] = !this.state.checked[index];\n      if (checkedCopy[index] === false) {\n        this.setState({ selectAll: false });\n        var indexs = orgid.indexOf(event);\n        if (indexs > -1) { //Make sure item is present in the array, without if condition, -n indexes will be considered from the end of the array.\n         orgid.splice(indexs, 1);\n        }\n       var checkds= checkedCopy.indexOf(index);\n       if(checkds > -1){\n        checkedCopy.splice(checkds ,1);\n        }\n\n        this.setState({ integrationid:orgid});\n        this.setState({ checked: checkedCopy});\n       }\n      else\n      {\n        orgid.push(event);\n        this.setState({ integrationid:orgid});\n        this.setState({ checked: checkedCopy});\n      }\n      if(this.state.dataintglist.length === this.state.integrationid.length)\n      {\n        this.setState({ selectAll: true });\n      }\n      if(this.state.integrationid.length === 0)\n      {\n        this.setState({ selectAll: false });\n        this.setState({ checked: []});\n        this.setState({ integrationid: []});\n      }\n    };\nasync  toggleaddintg(event) {\nthis.setState({\n        modaladd: !this.state.modaladd\n });};\nasync  toggle(event) {\n      const idc = event.currentTarget.id;\n      if(idc!=\"\"){\n      this.setState({\n        modal: !this.state.modal,\n        integid:idc\n    });\n    }\n      const datepopup=event.currentTarget.className;\n      if(datepopup=='modal fade show')\n      {\n        this.setState({\n            modal: this.state.modal\n        })\n      }\n       if(datepopup!=\"modal fade show\" && idc==\"\")\n     {\n    this.setState({\n        modal: !this.state.modal\n    })\n   }\n\n\n};\nasync  toggleschedule(event) {\n  const idc = event.currentTarget.id;\n  if(idc!=\"\"){\n  this.setState({\n    schedulemodal: !this.state.schedulemodal,\n    integid:idc});\n}\n  const datepopup=event.currentTarget.className;\n  if(datepopup=='modal fade show')\n  {\n    this.setState({\n      schedulemodal: this.state.schedulemodal\n    })\n  }\n   if(datepopup!=\"modal fade show\" && idc==\"\")\n {\nthis.setState({\n  schedulemodal: !this.state.schedulemodal\n})\n}\n};\n\nasync  toggletruncate(event) {;\n  const idc = event.currentTarget.id;\n  if(idc!=\"\"){\n  this.setState({\n    truncatemodal: !this.state.truncatemodal,\n    integid:idc\n});\n }\n  const datepopup=event.currentTarget.className;\n  if(datepopup=='modal fade show')\n  {\n    this.setState({\n      truncatemodal: this.state.truncatemodal\n    })\n  }\n   if(datepopup!=\"modal fade show\" && idc==\"\")\n {\nthis.setState({\n  truncatemodal: !this.state.truncatemodal\n})\n}};\n\nasync  toggledelete(event) {\n  const idc = event.currentTarget.id;\n  if(idc!=\"\"){\n  this.setState({\n    deleteintgmodal: !this.state.deleteintgmodal\n});\n}\n  const datepopup=event.currentTarget.className;\n  if(datepopup=='modal fade show')\n  {\n    this.setState({\n      deleteintgmodal: this.state.deleteintgmodal\n    })\n  }\n   if(datepopup!=\"modal fade show\" && idc==\"\")\n {\nthis.setState({\n  deleteintgmodal: !this.state.deleteintgmodal\n})\n}\n};\n\nasync  toggleeditschedule(event) {\n const idc = event.currentTarget.id;\n  if(idc!=\"\"){\n    this.setState({\n      scheduleeditmodal: !this.state.scheduleeditmodal,\n      integid:idc\n  });\n}\n  const datepopup=event.currentTarget.className;\n  if(datepopup=='modal fade show')\n  {\n    this.setState({\n      scheduleeditmodal: this.state.scheduleeditmodal\n    })\n  }\n   if(datepopup!=\"modal fade show\" && idc==\"\")\n {\nthis.setState({\n  scheduleeditmodal: !this.state.scheduleeditmodal\n})\n}};\n\n async intg(){\n        const url = this.config.API_URL+\"/api/intgs\"\n        const response = await fetch(url, {\n            method: 'GET',\n            headers: {\n                \"Content-Type\": \"application/json\",\n            }\n        });\n        const data = await response.json();\n        totaldata=data.results;\n        this.setState({ dataintglist: data.results, loading: false });\n      }\n\n//  async componentDidMount() {\n//      this.intg();\n//  };\n getTestData(page, pageSize, sorted, filtered, handleRetrievedData) {\n  let url = this.config.API_URL+\"/api/getIntgsoffset\";\n  debugger;\n  let postObject = {\n      page: page,\n      pageSize: pageSize,\n      sorted: sorted,\n      filtered: filtered\n  };\n  debugger;\n  return this.post(url, postObject).then(response => handleRetrievedData(response)).catch(response => console.log(response));\n}\npost(url, params = {}) {\n debugger;\n  return axios.post(url, params)\n}\n\n\n  async deletetintegration()\n  {\n    debugger;\n    let params={\n      integration_id:this.state.integrationid,\n      }\n      this.setState({\n        showprogressdeletemodel:true\n      });\n      const response = await axios.post(this.config.API_URL+'/api/deleteintegration',params);\n      debugger;\n      if(response.data.success=true)\n      {\n        this.setState({\n          showprogressdeletemodel:false,deleteintgmodal:false,integrationid:[],checked:[]\n        });this.intg();\n\n      }\n      else{\n        alert (response.data.message)\n      }\n\n  }\n\nrender() {\n  let sch;\n  const {dataintglist}=this.state;\n\n        return (\n          <Fragment>\n        <CSSTransitionGroup component=\"div\" transitionName=\"TabsAnimation\" transitionAppear={true}\n          transitionAppearTimeout={0} transitionEnter={false} transitionLeave={false}></CSSTransitionGroup>\n        <div>\n        <div className=\"app-page-title\">\n               <div className=\"page-title-wrapper\">\n                   <div className=\"page-title-heading\">\n                        <div className=\"page-title-icon\">\n                       <i className=\"pe-7s-shuffle opacity-6\"></i></div>\n                       <div>Integration<div className=\"page-title-subheading\">Integrations are apps and databases that you can use to send data through your pipeline.\n                       </div></div>\n\n                         </div>\n                        <div className=\"page-title-actions\">\n                        <Button className=\"mb-2 mr-2 buttonall\" onClick={this.toggleaddintg}><i className=\"pe-7s-plus p-1\"></i>ADD INTEGRATION</Button>\n                        </div>\n                        </div></div>\n              <Row>\n            <Col md=\"12\">\n              <Card className=\"main-card mb-3\">\n                <CardBody className=\"pt-0\" style={{textAlign:\"center\"}}>\n                  <ReactTable style={tableStyle}\n                  data={this.state.dataintglist}\n                  columns={[\n                    {\n                            Header:(\n                              <div>\n                              <input title=\"select integration\"\n                                type=\"checkbox\"\n                                onChange={this.handleChange}\n                                checked={this.state.selectAll}/>\n                                {this.state.checked!=\"\" ?\n                                 <Link className=\"font-icon-wrapper text-lyftron font-icon-sm border-0 \" title=\"delete integration\" onClick={this.toggledelete}> <i className=\"lnr-trash text-size icon-gradient bg-happy-fisher\"> </i></Link>\n                                 :''}\n                                 </div>\n                            ),\n                            accessor:\"id\",\n                            Cell: (row) => (\n                              <div>\n                      <input\n                    type=\"checkbox\" id={row.row.id}\n                    defaultChecked={this.state.checked[row.index]}\n                    checked={this.state.checked[row.index]}\n                    onChange={() => this.handleSingleCheckboxChange(row.row.id, row.index)}\n                  />\n                  <br></br>  {row.row.status===\"Active\" ?\n                  <Switch classname=\"switch has-switch has-switch-sm\" id={row.row.id}  onChange={() => this.handleisactive(row.row.id,true)} checked={true} />:\n                  <Switch classname=\"switch has-switch has-switch-sm\" id={row.row.id}  onChange={() => this.handleisactive(row.row.id,false)} checked={false} />\n                   }\n                  </div>\n                  ),\n                            sortable: false,\n                            filterable: false,width:60},\n                            { Header: \"Actions\",\n                            accessor: \"id\",\n                            style: {\n                              display: \"block !important\"\n                            },\n                            Cell: (row) => (\n                              (row.row.isschedule===true ?\n                                (sch=true)\n                                : (sch=false)\n                             ),\n                              <div>\n                                <Link to={{pathname: `/integrations/view?id=${row.row.id}`}} title=\"overview\" className=\"font-icon-wrapper text-lyftron font-icon-sm border-0 p-0\">\n                                   <i className=\"lnr-eye icon-gradient bg-happy-fisher\"></i></Link>\n\n                                {row.row.isschedule===true ?\n                                 <Link title=\"edit\" className=\"font-icon-wrapper text-lyftron font-icon-sm border-0 p-0\" id={row.row.id} onClick={this.toggleeditschedule}>\n                                    <i className=\"lnr-highlight text-newssize icon-gradient bg-happy-fisher\"></i></Link>\n                                :('')}\n                                {row.row.isschedule===true ?\n                               <Link style={{ pointerEvents: 'none' }} className=\"font-icon-wrapper font-icon-sm border-0 p-0\"> <i className=\"lnr-chevron-right-circle text-newsize icon-gradient bg-happy-fisher-disable\"></i></Link>\n                               :<Link className=\"font-icon-wrapper text-lyftron font-icon-sm border-0 p-0\" title=\"Run\" id={row.row.id} onClick={this.toggle}> <i className=\"lnr-chevron-right-circle text-newsize icon-gradient bg-happy-fisher\"></i></Link>\n                                }\n                               {row.row.isschedule===true ?\n                               <Link style={{ pointerEvents: 'none' }} className=\"font-icon-wrapper font-icon-sm border-0 p-0\"> <i className=\"lnr-calendar-full text-newsize icon-gradient bg-happy-fisher-disable\"></i></Link>\n                               :<Link className=\"font-icon-wrapper text-lyftron font-icon-sm border-0 p-0\" title=\"Schedule\" id={row.row.id} onClick={this.toggleschedule}> <i className=\"lnr-calendar-full text-newsize icon-gradient bg-happy-fisher\"></i></Link>\n                            }\n              <Link className=\"font-icon-wrapper text-lyftron font-icon-sm border-0 p-0\" title=\"Delete/Truncate all data\" id={row.row.id} onClick={this.toggletruncate}> <i className=\"lnr-trash text-newsize icon-gradient bg-happy-fisher\"></i></Link>\n             </div>\n                  ),filterable:false,width:150\n                          },\n                            {\n                              Header: \"Integration name\",\n                              accessor: \"name\",\n                              style: {\n                                textAlign: \"center\"\n                              },\n                              Cell:(row)=>(<div>\n                                <div className=\"text-center text-muted small\"><b>{row.row.name}</b></div>\n                               </div>\n\n                              ),\n                              filterable:true,width:130\n                            },\n                    {\n                          Header: \"Integration journey\",\n                          accessor:\"sourcename\",\n\n                          style: {\n                            display: \"block !important\",\n                          textAlign: \"center !important\"\n                          },\n                          Cell: (row) => (\n                              <div className=\"widget-content p-0\">\n                <div className=\"widget-content-wrapper\" style={{display:\"inline-flex\"}}>\n                              <div className=\"widget-content\">\n                              <img width={28} className=\"rounded-circle\" src={row.row.sourcelogo} alt=\"Avatar\" />\n                              <div title=\"Source\" className=\"widget-heading small\"><b>{row.row.sourcename}</b></div>\n\n                          </div>\n                          <div className=\"p-2\"><img height={28} src={arrowright} alt=\"\"></img></div>\n                          <div className=\"widget-content\">\n                          <img width={28} className=\"rounded-circle\" src={row.row.destinationlogo} alt=\"Avatar\" />\n                          <div title=\"Destination\" className=\"widget-heading small\"><b>{row.row.destinationname}</b></div>\n                         </div> </div></div> ), filterable:false,width:140},\n\n                          {\n                            Header: \"Recent loads\",\n                            accessor:\"graphdata\",\n                            style: {\n                              textAlign: \"center\"\n                            },\n                            Cell: (row) => (\n                              (row.row.total===\"0\" ?\n                                <div>No Data</div>:\n                              <ResponsiveContainer height=\"100%\" width=\"100%\">\n                              <AreaChart data={row.row.graphdata}> <Tooltip />\n                                <defs>\n                                  <linearGradient datakey=\"rows_insert\"id=\"colorPv2\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                    <stop offset=\"10%\" stopColor=\"#4f3989\" stopOpacity={0.7}/>\n                                    <stop offset=\"90%\" stopColor=\"#4f3989\" stopOpacity={0}/>\n                                  </linearGradient>\n                                </defs>\n                                <Area type=\"monotone\"  dataKey=\"rows_insert\" stroke=\"#ed9521a8\" strokeWidth=\"3\"\n                                  fillOpacity={1} fill=\"url(#colorPv2)\"/>\n\n                              </AreaChart>\n                            </ResponsiveContainer>\n                              )\n                               ),width:140,filterable:false\n                          },\n                          {\n                            Header: \"Total rows loaded\",\n                            accessor: \"name\",\n                            width: 120,\n                            style: {\n                              display: \"block !important\"\n                            },\n                            Cell:(row)=>(\n                               <div className=\"badge badge-lyftronwarning small widget-numbers\" title=\"total rows\">\n\n                    <CountUp start={0} end={row.row.total} separator=\"\" decimals={0} decimal=\".\"\n                      prefix=\"\" useEasing={false} suffix=\"\" duration=\"5\"/>\n                  </div> ),filterable:false\n                          },\n\n    {\n      Header: \"Created by\",\n      accessor:\"createdby\",\n      style: {\n        display: \"block !important\"\n      },\n      Cell: (row) => (\n          <div className=\"widget-content\" style={{padding:\"0.5rem\"}}>\n          <img width={30} className=\"rounded-circle\" src={avtarimage} alt=\"Avatar\" />\n          <div className=\"widget-heading small\"><b>{row.row.createdby}</b></div>\n      </div>\n        ),\n   filterable:false,width:80\n    },\n                          {\n                            Header:\"Schedule frequency\",\n                            accessor:'schedule',\n                            width: getColumnWidth(dataintglist, 'schedule', 'sche frequency'),\n                            style: {\n                              display: \"block !important\"\n                            },\n                            Cell:(row)=>(\n                            <div className=\"d-block text-center text-lyftron small\">\n                            {row.row.isschedule===true ?\n                            <div>\n                        <div style={{\"text-transform\":\"capitalize\"}}><b> {row.row.schedule}</b></div>\n                      </div>  :<div>\n                        <div><b>One Time</b></div>\n                      </div>}</div> )},\n                          {accessor:\"total\",show:false},\n                          {accessor:\"schedule\",show:false},\n                          {accessor:\"sourcelogo\",show:false},\n                          {accessor:\"createdAt\",show:false},\n                          {accessor:\"destinationname\", show:false},\n                          {accessor:\"destinationlogo\",show:false},\n                          {accessor:\"startDate\", show:false},\n                          {accessor:\"endDate\",show:false},\n                          {accessor:\"nextrun\",show:false},\n                          {accessor:\"lastrun\",show:false},\n                          {accessor:\"status\",show:false},\n                     {\n                            Header:\"Next execution at\",\n                            accessor:'isschedule',\n                          width: getColumnWidth(dataintglist, 'schedule', 'Next execution at'),\n                            style: {\n                              display: \"block !important\"\n                            },\n                            Cell:(row)=>(\n                            <div className=\"d-block text-center text-lyftron small\">\n                            {row.row.isschedule===true ?\n                            <div>\n                        <div><b><Moment format=\"YYYY-MMM-DD\">{row.row.lastrun}</Moment></b></div>\n                        {row.row.status==='Inactive' ?\n                           <div className=\"text-lyftron badge badge-lyftronwarning\" title=\"job is paused\">\n                         Paused\n                           </div>:\n                 <Timer\n                      initialTime={row.row.nextrun*1000}\n                      direction=\"backward\">{() => (\n                          <React.Fragment>\n                            <div className=\"text-lyftron badge badge-lyftronwarning\" title=\"job is running\">\n                              <Timer.Days /><b>d </b>\n                              <Timer.Hours /><b>h </b>\n                              <Timer.Minutes /><b>m </b>\n                              <Timer.Seconds /><b>s</b>\n                              </div>\n                          </React.Fragment>\n                      )}</Timer>}\n                      </div>:<div><b>Not scheduled</b></div>}</div>\n                         ),width:120,filterable:false },\n\n  {\n    Header: \"Created at\",\n    accessor: \"createdAt\",\n    style: {\n      display: \"block !important\"\n    },\n    Cell:(row)=>(\n      <div className=\"text-center text-lyftron small\">\n      <div><b><Moment format=\"YYYY-MMM-DD HH:mm:ss\">\n         {row.row.createdAt}\n       </Moment></b></div></div>\n    ),width:120,\n    filterable:false\n  },\n\n    {\n      Header: \"Updated at\",\n      accessor: \"updatedAt\",\n      style: {\n        display: \"block !important\"\n      },\n      Cell:(row)=>(\n        <div className=\"text-center text-lyftron small\">\n        <div><b><Moment format=\"YYYY-MMM-DD HH:mm:ss\">\n           {row.row.updatedAt}\n         </Moment></b></div></div>\n      ),width:120,\n      filterable:false\n    },\n    {\n      Header: \"Status\",\n      accessor: \"isschedule\",\n      style: {\n        display: \"block !important\"\n      },\n      Cell: (row) => (\n        <div className=\"text-lyftron small\">\n        {row.row.isschedule===true ?\n        (row.row.status==='Inactive' ?\n        <div title=\"status\" className=\"badge badge-lyftronnew\">Inactive</div>\n          : <div>\n          <div className=\"text-lyftron badge badge-lyftronwarning\">In progress</div>\n          </div>\n        )\n        :<div>\n          {row.row.lastrunstatus!==null ?\n        <div title=\"previous run status\" className=\"badge badge-lyftron small\">Success</div>\n        :<div title=\"run status\" className=\"badge badge-lyftrondark\">Draft</div> }\n       </div>}</div>\n      ),filterable:false\n    }\n      ]}\n      defaultPageSize={5}\n      pages={this.state.pages}\n      loading={this.state.loading}\n      showPagination={true}\n      showPaginationTop={false}\n      showPaginationBottom={true}\n      sortable={false}\n      pageSizeOptions={[5, 10, 20, 25, 50, 100]}\n      manual\n      filterable\n      onFetchData={(state, instance) => {\n\n        this.setState({loading: true});\n        this.getTestData(state.page, state.pageSize, state.sorted, state.filtered, (res) => {\n        this.setState({\n              dataintglist: res.data.results,\n               pages: res.data.pages,\n                loading: false\n        })\n      });\n      }}\n       className=\"-striped -highlight\" />\n         </CardBody></Card></Col></Row>\n\n  <Modal basic aria-hidden=\"true\"  isOpen={this.state.modal} toggle={this.toggle} backdrop={false}>\n   <div> <Link className=\"float-right\" style={{textDecoration:\"none\"}} onClick={this.toggle}><i className=\"lnr-cross-circle iconfont\"></i></Link>\n   </div> <div> <Runbat id={this.state.integid}></Runbat> </div>\n  </Modal>\n\n  <Modal basic aria-hidden=\"true\"  isOpen={this.state.schedulemodal} toggle={this.toggleschedule} backdrop={false}>\n  <div> <Link className=\"float-right\" style={{textDecoration:\"none\"}} onClick={this.toggleschedule}><i className=\"lnr-cross-circle iconfont\"></i></Link>\n   </div> <div> <Runscheduler id={this.state.integid}></Runscheduler> </div>\n     </Modal>\n\n  <Modal basic aria-hidden=\"true\" isOpen={this.state.truncatemodal} toggle={this.toggletruncate}  backdrop={false}>\n     <div>\n   <Link className=\"float-right\" style={{textDecoration:\"none\"}} onClick={this.toggletruncate}><i className=\"lnr-cross-circle iconfont\"></i></Link>\n   </div><div><Deleteandtruncate id={this.state.integid}></Deleteandtruncate></div>\n   </Modal>\n\n   <Modal basic aria-hidden=\"true\" isOpen={this.state.scheduleeditmodal} toggle={this.toggleeditschedule} backdrop={false}>\n  <div><Link className=\"float-right\" style={{textDecoration:\"none\"}} onClick={this.toggleeditschedule}><i className=\"lnr-cross-circle iconfont\"></i></Link>\n  </div><div><Editschedler id={this.state.integid}></Editschedler></div>\n  </Modal>\n\n  <Modal basic aria-hidden=\"true\"  isOpen={this.state.deleteintgmodal} toggle={this.toggledelete} backdrop={false}>\n                <div> <Link className=\"float-right\" style={{textDecoration:\"none\"}} onClick={this.toggledelete}><i className=\"lnr-cross-circle iconfont\"></i></Link>\n   </div>\n     <div className=\"text-center mb-3\">\n      <i className=\"pe-7s-shuffle\" style={{fontSize:'5rem',color:'#4f3989'}}></i>\n      <h5 className=\"mt-2\">Delete</h5>\n      <h6>Integrations are apps and databases that you can use to\n<br></br>send data through your pipeline.</h6>\n      </div>\n                    <Form className=\"text-center\">\n                    <label><strong>Do you want to delete selected integration?...</strong></label>\n                 <Row>\n                <Col md=\"4\"></Col>\n                <Col md=\"5\">\n              {this.state.showprogressdeletemodel ? (\n          <div className=\"text-all float-right\">\n              <FontAwesomeIcon\n                  icon={['fas', 'spinner']}\n                  pulse\n                  fixedWidth\n                  size=\"2x\"/>\n          </div>):('')}\n      </Col>\n    <Col md=\"2\">  <Button Active  className=\"ui button float-right btn-wide btn-pill btn-outline-2x btn mt-3 mb-3 mr-4\" style={{color:'#66529C',backgroundColor:'#fff',border:'1px solid #66529C'}} onClick={this.deletetintegration}>Delete </Button>{' '}</Col>\n      <Col md=\"1\"></Col>\n      </Row>\n        </Form> </Modal>\n\n <Modal basic aria-hidden=\"true\"  isOpen={this.state.modaladd} toggle={this.toggleaddintg} backdrop={false}>\n  <div> <Link className=\"float-right\" style={{textDecoration:\"none\"}} onClick={this.toggleaddintg}><i className=\"lnr-cross-circle iconfont\"></i></Link>\n   </div> <Addintg />\n  </Modal>\n\n   </div>\n                  </Fragment>\n\n\n        );\n      }\n\n\n}\n","/Users/apple/Documents/lyftron/src/Pages/Integrations/expanded.js",[],"/Users/apple/Documents/lyftron/src/Pages/Integrations/runbat.js",["123","124","125","126","127","128","129","130","131"],"/Users/apple/Documents/lyftron/src/Pages/Connections/Connection/index.js",[],"/Users/apple/Documents/lyftron/src/Layout/AppHeader/Components/HeaderRightDrawer.js",[],"/Users/apple/Documents/lyftron/src/Layout/AppMain/PageTitle.js",[],"/Users/apple/Documents/lyftron/src/Pages/Wizard/components/step2.js",[],"/Users/apple/Documents/lyftron/src/Layout/AppHeader/Components/TabsContent/TimelineExample.js",[],"/Users/apple/Documents/lyftron/src/Layout/AppMobileMenu/index.js",[],"/Users/apple/Documents/lyftron/src/config/urlconfig.js",[],"/Users/apple/Documents/lyftron/src/Pages/Administration/Apis/index.js",[],"/Users/apple/Documents/lyftron/src/Layout/AppNav/VerticalNavWrapper.js",["132","133"],"/Users/apple/Documents/lyftron/src/Pages/Dashboards/Minimal/Examples/Usergraph.jsx",["134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150"],"/Users/apple/Documents/lyftron/src/Pages/Connections/AddConnection/index.js",["151","152","153","154","155","156","157","158","159","160","161","162"],"/Users/apple/Documents/lyftron/src/Pages/Wizard/components/step1.js",[],"/Users/apple/Documents/lyftron/src/Layout/AppFooter/Components/TabsContent/SystemExample.js",[],"/Users/apple/Documents/lyftron/src/Layout/AppHeader/Components/TabsContent/DrawerBigExample.js",[],{"ruleId":"163","severity":1,"message":"164","line":3,"column":1,"nodeType":"165","endLine":5,"endColumn":3},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":9},{"ruleId":"170","severity":1,"message":"174","line":7,"column":8,"nodeType":"172","messageId":"173","endLine":7,"endColumn":14},{"ruleId":"175","severity":1,"message":"176","line":90,"column":19,"nodeType":"177","messageId":"178","endLine":90,"endColumn":21},{"ruleId":"179","severity":1,"message":"180","line":107,"column":10,"nodeType":"181","messageId":"182","endLine":107,"endColumn":36},{"ruleId":"175","severity":1,"message":"176","line":124,"column":20,"nodeType":"177","messageId":"178","endLine":124,"endColumn":22},{"ruleId":"175","severity":1,"message":"183","line":176,"column":13,"nodeType":"177","messageId":"178","endLine":176,"endColumn":15},{"ruleId":"175","severity":1,"message":"176","line":183,"column":19,"nodeType":"177","messageId":"178","endLine":183,"endColumn":21},{"ruleId":"175","severity":1,"message":"183","line":189,"column":20,"nodeType":"177","messageId":"178","endLine":189,"endColumn":22},{"ruleId":"175","severity":1,"message":"176","line":189,"column":46,"nodeType":"177","messageId":"178","endLine":189,"endColumn":48},{"ruleId":"175","severity":1,"message":"183","line":200,"column":9,"nodeType":"177","messageId":"178","endLine":200,"endColumn":11},{"ruleId":"175","severity":1,"message":"176","line":206,"column":15,"nodeType":"177","messageId":"178","endLine":206,"endColumn":17},{"ruleId":"175","severity":1,"message":"183","line":212,"column":16,"nodeType":"177","messageId":"178","endLine":212,"endColumn":18},{"ruleId":"175","severity":1,"message":"176","line":212,"column":42,"nodeType":"177","messageId":"178","endLine":212,"endColumn":44},{"ruleId":"175","severity":1,"message":"183","line":222,"column":9,"nodeType":"177","messageId":"178","endLine":222,"endColumn":11},{"ruleId":"175","severity":1,"message":"176","line":229,"column":15,"nodeType":"177","messageId":"178","endLine":229,"endColumn":17},{"ruleId":"175","severity":1,"message":"183","line":235,"column":16,"nodeType":"177","messageId":"178","endLine":235,"endColumn":18},{"ruleId":"175","severity":1,"message":"176","line":235,"column":42,"nodeType":"177","messageId":"178","endLine":235,"endColumn":44},{"ruleId":"175","severity":1,"message":"183","line":244,"column":9,"nodeType":"177","messageId":"178","endLine":244,"endColumn":11},{"ruleId":"175","severity":1,"message":"176","line":250,"column":15,"nodeType":"177","messageId":"178","endLine":250,"endColumn":17},{"ruleId":"175","severity":1,"message":"183","line":256,"column":16,"nodeType":"177","messageId":"178","endLine":256,"endColumn":18},{"ruleId":"175","severity":1,"message":"176","line":256,"column":42,"nodeType":"177","messageId":"178","endLine":256,"endColumn":44},{"ruleId":"175","severity":1,"message":"183","line":266,"column":9,"nodeType":"177","messageId":"178","endLine":266,"endColumn":11},{"ruleId":"175","severity":1,"message":"176","line":273,"column":15,"nodeType":"177","messageId":"178","endLine":273,"endColumn":17},{"ruleId":"175","severity":1,"message":"183","line":279,"column":16,"nodeType":"177","messageId":"178","endLine":279,"endColumn":18},{"ruleId":"175","severity":1,"message":"176","line":279,"column":42,"nodeType":"177","messageId":"178","endLine":279,"endColumn":44},{"ruleId":"170","severity":1,"message":"184","line":295,"column":9,"nodeType":"172","messageId":"173","endLine":295,"endColumn":18},{"ruleId":"179","severity":1,"message":"180","line":331,"column":10,"nodeType":"181","messageId":"182","endLine":331,"endColumn":36},{"ruleId":"175","severity":1,"message":"183","line":380,"column":52,"nodeType":"177","messageId":"178","endLine":380,"endColumn":54},{"ruleId":"170","severity":1,"message":"185","line":410,"column":36,"nodeType":"172","messageId":"173","endLine":410,"endColumn":39},{"ruleId":"186","severity":1,"message":"187","line":411,"column":31,"nodeType":"188","messageId":"189","endLine":411,"endColumn":32},{"ruleId":"190","severity":1,"message":"191","line":576,"column":28,"nodeType":"192","messageId":"178","endLine":576,"endColumn":33},{"ruleId":"175","severity":1,"message":"176","line":53,"column":15,"nodeType":"177","messageId":"178","endLine":53,"endColumn":17},{"ruleId":"175","severity":1,"message":"176","line":59,"column":17,"nodeType":"177","messageId":"178","endLine":59,"endColumn":19},{"ruleId":"175","severity":1,"message":"183","line":63,"column":30,"nodeType":"177","messageId":"178","endLine":63,"endColumn":32},{"ruleId":"175","severity":1,"message":"183","line":87,"column":27,"nodeType":"177","messageId":"178","endLine":87,"endColumn":29},{"ruleId":"175","severity":1,"message":"183","line":90,"column":24,"nodeType":"177","messageId":"178","endLine":90,"endColumn":26},{"ruleId":"175","severity":1,"message":"176","line":133,"column":30,"nodeType":"177","messageId":"178","endLine":133,"endColumn":32},{"ruleId":"175","severity":1,"message":"176","line":133,"column":79,"nodeType":"177","messageId":"178","endLine":133,"endColumn":81},{"ruleId":"175","severity":1,"message":"176","line":133,"column":112,"nodeType":"177","messageId":"178","endLine":133,"endColumn":114},{"ruleId":"179","severity":1,"message":"180","line":162,"column":10,"nodeType":"181","messageId":"182","endLine":162,"endColumn":36},{"ruleId":"170","severity":1,"message":"193","line":12,"column":3,"nodeType":"172","messageId":"173","endLine":12,"endColumn":12},{"ruleId":"194","severity":1,"message":"195","line":27,"column":9,"nodeType":"196","endLine":27,"endColumn":46},{"ruleId":"170","severity":1,"message":"197","line":1,"column":28,"nodeType":"172","messageId":"173","endLine":1,"endColumn":36},{"ruleId":"170","severity":1,"message":"198","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":26},{"ruleId":"170","severity":1,"message":"199","line":8,"column":3,"nodeType":"172","messageId":"173","endLine":8,"endColumn":6},{"ruleId":"170","severity":1,"message":"200","line":9,"column":3,"nodeType":"172","messageId":"173","endLine":9,"endColumn":6},{"ruleId":"170","severity":1,"message":"201","line":10,"column":3,"nodeType":"172","messageId":"173","endLine":10,"endColumn":9},{"ruleId":"170","severity":1,"message":"202","line":13,"column":3,"nodeType":"172","messageId":"173","endLine":13,"endColumn":14},{"ruleId":"170","severity":1,"message":"203","line":14,"column":3,"nodeType":"172","messageId":"173","endLine":14,"endColumn":6},{"ruleId":"170","severity":1,"message":"204","line":15,"column":3,"nodeType":"172","messageId":"173","endLine":15,"endColumn":10},{"ruleId":"170","severity":1,"message":"205","line":16,"column":3,"nodeType":"172","messageId":"173","endLine":16,"endColumn":10},{"ruleId":"170","severity":1,"message":"206","line":17,"column":3,"nodeType":"172","messageId":"173","endLine":17,"endColumn":13},{"ruleId":"170","severity":1,"message":"207","line":18,"column":3,"nodeType":"172","messageId":"173","endLine":18,"endColumn":10},{"ruleId":"170","severity":1,"message":"208","line":19,"column":3,"nodeType":"172","messageId":"173","endLine":19,"endColumn":10},{"ruleId":"170","severity":1,"message":"209","line":20,"column":3,"nodeType":"172","messageId":"173","endLine":20,"endColumn":14},{"ruleId":"170","severity":1,"message":"210","line":23,"column":3,"nodeType":"172","messageId":"173","endLine":23,"endColumn":11},{"ruleId":"170","severity":1,"message":"211","line":27,"column":8,"nodeType":"172","messageId":"173","endLine":27,"endColumn":15},{"ruleId":"175","severity":1,"message":"183","line":54,"column":26,"nodeType":"177","messageId":"178","endLine":54,"endColumn":28},{"ruleId":"175","severity":1,"message":"176","line":74,"column":33,"nodeType":"177","messageId":"178","endLine":74,"endColumn":35},{"ruleId":"170","severity":1,"message":"212","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":13},{"ruleId":"170","severity":1,"message":"199","line":5,"column":3,"nodeType":"172","messageId":"173","endLine":5,"endColumn":6},{"ruleId":"170","severity":1,"message":"200","line":6,"column":3,"nodeType":"172","messageId":"173","endLine":6,"endColumn":6},{"ruleId":"170","severity":1,"message":"213","line":10,"column":3,"nodeType":"172","messageId":"173","endLine":10,"endColumn":7},{"ruleId":"170","severity":1,"message":"214","line":11,"column":3,"nodeType":"172","messageId":"173","endLine":11,"endColumn":14},{"ruleId":"170","severity":1,"message":"215","line":12,"column":3,"nodeType":"172","messageId":"173","endLine":12,"endColumn":12},{"ruleId":"170","severity":1,"message":"216","line":13,"column":3,"nodeType":"172","messageId":"173","endLine":13,"endColumn":8},{"ruleId":"170","severity":1,"message":"217","line":16,"column":10,"nodeType":"172","messageId":"173","endLine":16,"endColumn":23},{"ruleId":"218","severity":1,"message":"219","line":117,"column":9,"nodeType":"196","endLine":122,"endColumn":10},{"ruleId":"220","severity":1,"message":"221","line":127,"column":19,"nodeType":"196","endLine":131,"endColumn":21},{"ruleId":"175","severity":1,"message":"176","line":152,"column":19,"nodeType":"177","messageId":"178","endLine":152,"endColumn":21},{"ruleId":"175","severity":1,"message":"183","line":163,"column":19,"nodeType":"177","messageId":"178","endLine":163,"endColumn":21},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["222"],"no-negated-in-lhs",["223"],"no-unused-vars","'_' is defined but never used.","Identifier","unusedVar","'Loader' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","Expected '!==' and instead saw '!='.","'totaldata' is assigned a value but never used.","'sch' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","'wizardNav' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Fragment' is defined but never used.","'CSSTransitionGroup' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","'ButtonGroup' is defined but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'TabContent' is defined but never used.","'TabPane' is defined but never used.","'Popover' is defined but never used.","'PopoverBody' is defined but never used.","'CardBody' is defined but never used.","'CountUp' is defined but never used.","'axios' is defined but never used.","'Form' is defined but never used.","'CustomInput' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'NonceProvider' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]